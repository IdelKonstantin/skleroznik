Принципы ООП:

	-Абстракция 
	-Инкапсуляция
	-Наследование
	-Полиморфизм (динамический или "времени выполнения")

Принципы проектирования в ОО-стиле:

	1) Инкапсулируйте то, что изменяется
	2) Предпочитайте композицию и агрегацию (включение) наследованию
	3) Программируйте на уровне интерфейсов
	4) Стремитесь к слабой связанности взаимодействующих объектов
	5) Классы должны быть открыты для расширения, но закрыты для изменения
	6) Код должен зависеть от абстракций, а не от конкретных классов
	7) Истинная константа в коде - это его ИЗМЕНЕНИЕ

Или они же в устоявшихся терминах:

DRY - don't repeat yourself
YAGNI - you ain't gonna need it
KISS - keep it simple, stupid!
TDA - tell, don't ask (объединение данных и методов)
LoD - Law of Demetra (предпочтение отдавать слабой связанности)
	
SOLID:
	
	Single responsibility — принцип единственной ответственности для объекта
	("делай что-то одно и делай это хорошо")
	
	Open-closed — принцип открытости / закрытости (открытость для расширения, закрытость для изменений)

	Liskov substitution — принцип подстановки Барбары Лисков («функции(методы), которые используют базовый тип, 
	должны иметь возможность использовать подтипы базового типа не зная об этом»)

	Interface segregation — принцип разделения интерфейса 
	(«клиенты не должны зависеть от методов, которые они не используют»)

	Dependency inversion — принцип инверсии зависимостей
	(модули верхних уровней не должны зависеть от модулей нижних уровней, а оба типа модулей должны 
	зависеть от абстракций; сами абстракции не должны зависеть от деталей, а вот детали должны зависеть от абстракций)
