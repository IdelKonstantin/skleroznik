#include "maze.h"

int main() {

	const path::topology_t poligonTopology = {
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0}, //0
		{1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0}, //1
		{1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //2
		{1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1}, //3
		{1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //4
		{1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //5
		{1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //6
		{1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1}, //7
		{1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1}, //8
		{1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1}, //9
		{1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1}, //10
		{1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //11
		{1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //12
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}  //13
	}; //0  1  2  3  4  5  6  7  8  9  10 11 12 13
/*
	const path::topology_t poligonTopology = {
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //0
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //1
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //2
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //3
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //4
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //5
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //6
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //7
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //8
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //9
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //10
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //11
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //12
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}  //13
	}; //0  1  2  3  4  5  6  7  8  9  10 11 12 13
*/
/*
	const path::topology_t poligonTopology = {
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //0
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //1
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //2
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //3
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //4
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //5
		{1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1}, //6
		{1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1}, //7
		{1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1}, //8
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //9
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //10
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //11
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, //12
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}  //13
	}; //0  1  2  3  4  5  6  7  8  9  10 11 12 13
*/
	const path::point_t startPoint = std::make_pair(0,0);
	pathFinder{}.solveTopology(poligonTopology, startPoint);
}